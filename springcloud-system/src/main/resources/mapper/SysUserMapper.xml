<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.camel.system.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.camel.core.model.SysUser">
        <id column="uid" property="uid" jdbcType="INTEGER"></id>
        <result column="username" property="username" jdbcType="VARCHAR"></result>
        <result column="password" property="password" jdbcType="VARCHAR"></result>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"></result>
        <result column="email" property="email" jdbcType="VARCHAR"></result>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"></result>
        <result column="status" property="status" jdbcType="VARCHAR"></result>
        <result column="gmt_create" property="gmtCreate" jdbcType="DATE"></result>
        <result column="gmt_modified" property="gmtModified" jdbcType="DATE"></result>
        <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR"></result>
        <result column="password_expired_time" property="passwordExpiredTime" jdbcType="DATE"></result>
        <result column="login_failure_count" property="loginFailureCount" jdbcType="INTEGER"></result>
        <result column="szbm" property="szbm" jdbcType="VARCHAR"></result>
        <result column="age" property="age" jdbcType="INTEGER"></result>
        <result column="gender" property="gender" jdbcType="VARCHAR"></result>
        <result column="org_no" property="orgNo" jdbcType="VARCHAR"></result>
        <result column="org_name" property="orgName" jdbcType="VARCHAR"></result>
        <result column="address" property="address" jdbcType="VARCHAR"></result>
        <result column="remark" property="remark" jdbcType="VARCHAR"></result>
        <result column="seat_num" property="seatNum" jdbcType="VARCHAR"></result>
        <result column="work_num" property="workNum" jdbcType="VARCHAR"></result>
        <collection property="roleIds" fetchType="eager" column="uid"
                    select="findRoleIdsByUserId"></collection>
    </resultMap>

    <sql id="BASE_SQL">
        sys_user.uid,
        sys_user.username,
        sys_user.`password`,
        sys_user.nickname,
        sys_user.email,
        sys_user.mobile,
        sys_user.`status`,
        sys_user.gmt_create,
        sys_user.gmt_modified,
        sys_user.last_login_time,
        sys_user.password_expired_time,
        sys_user.login_failure_count,
        sys_user.szbm,
        sys_user.age,
        sys_user.gender,
        sys_user.org_no,
        sys_user.org_name,
        sys_user.address,
        sys_user.remark,
        sys_user.seat_num,
        sys_user.work_num
    </sql>

    <select id="findRoleIdsByUserId" resultType="integer">
        select role_id from sys_user_role where user_id = #{uid}
    </select>

    <select id="list" resultMap="BaseResultMap" parameterType="com.camel.core.model.SysUser">
        SELECT
        <include refid="BASE_SQL"></include>
        FROM
        sys_user
        <where>
            sys_user.status = 1
            <if test="email !=null and email != ''">and sys_user.email like CONCAT('%', #{email}, '%')</if>
            <if test="username !=null and username != ''">and sys_user.username like CONCAT('%', #{username}, '%')</if>
            <if test="seatNum !=null and seatNum != ''">and sys_user.seat_num like CONCAT('%', #{seatNum}, '%')</if>
            <if test="workNum !=null and workNum != ''">and sys_user.work_num like CONCAT('%', #{workNum}, '%')</if>
            <if test="idNum !=null and idNum != ''">and sys_user.id_num like CONCAT('%', #{idNum}, '%')</if>
            <if test="mobile !=null and mobile != ''">and sys_user.mobile like CONCAT('%', #{mobile}, '%')</if>
        </where>
        ORDER BY sys_user.uid
    </select>

    <select id="byRole" resultMap="BaseResultMap">
        SELECT
        <include refid="BASE_SQL"/>
        FROM sys_user sys_user WHERE sys_user.uid IN (SELECT user_id FROM sys_user_role sur WHERE role_id = #{id})
    </select>

    <update id="updateSeat">
        update
        sys_user
        set seat_num = #{seatNum} where uid = #{userId}
    </update>

    <update id="deleteSeat">
        update
        sys_user
        set seat_num = '' where seat_num = #{seatNum}
    </update>

    <update id="loadWorkNum">
        update
        sys_user
        set work_num = '' + (uid+1000) + ''
    </update>
</mapper>
